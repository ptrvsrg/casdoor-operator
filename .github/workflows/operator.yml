name: Operator
on:
  push:
    branches:
      - '*'
    paths:
      - 'api/**'
      - 'cmd/**'
      - 'internal/**'
      - 'config/**'
    tags:
      - "v[0-9]+.[0-9]+.[0-9]+"
      - "v[0-9]+.[0-9]+.[0-9]+-RC[0-9]+"
  pull_request:
  workflow_dispatch:
permissions:
  contents: read
jobs:
  fmt:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Setup Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.24.2'
          cache-dependency-path: go.sum
      - name: Format
        run: make fmt
  vet:
    needs: fmt
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Setup Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.24.2'
          cache-dependency-path: go.sum
      - name: Vet
        run: make vet
  build:
    needs: vet
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Setup Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.24.2'
          cache-dependency-path: go.sum
      - name: Install dependencies
        run: go mod download
      - name: Build
        run: make build
      - name: Upload Build Artifact
        uses: actions/upload-artifact@v4
        with:
          name: build
          path: ./bin
  lint:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Setup Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.24.2'
          cache-dependency-path: go.sum
      - name: Lint
        uses: golangci/golangci-lint-action@v7
        with:
          version: v2.0.2
          args: --tests=false --timeout=10m
  unit:
    needs: lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Setup Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.24.2'
          cache-dependency-path: go.sum
      - name: Test
        run: make test-unit
      - name: Upload Build Artifact
        uses: actions/upload-artifact@v4
        with:
          name: unit-coverage
          path: coverage.out
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
  integration:
    needs: lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Setup Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.24.2'
          cache-dependency-path: go.sum
      - name: Test
        run: make test-integration
      - name: Upload Build Artifact
        uses: actions/upload-artifact@v4
        with:
          name: integration-coverage
          path: coverage.out
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
  e2e:
    needs: lint
    runs-on: ubuntu-latest
    if: (github.ref_type == 'tag' && contains(github.ref, 'RC')) || github.event == 'workflow_dispatch'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Setup Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.24.2'
          cache-dependency-path: go.sum
      - name: Create k8s Kind Cluster
        uses: helm/kind-action@v1.12.0
        with:
          cluster_name: e2e
      - name: E2E tests
        run: make test-e2e
  publish:
    needs:
      - unit
      - integration
      - e2e
    runs-on: ubuntu-latest
    if: github.ref_type == 'tag'
    strategy:
      matrix:
        runtime:
          - alpine
          - debian
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.ACCESS_TOKEN }}
      - name: Build and push image based ${{ matrix.runtime }}
        uses: docker/build-push-action@v4
        with:
          cache-from: type=gha
          cache-to: type=gha,mode=max
          context: .
          file: ./Dockerfile-${{ matrix.runtime }}
          platforms: |
            linux/amd64
            linux/arm64
            linux/arm/v7
            linux/s390x
            linux/ppc64le
          tags: |
            ghcr.io/ptrvsrg/casdoor-operator:operator-${{ github.ref_name }}-${{ matrix.runtime }}
            ghcr.io/ptrvsrg/casdoor-operator:operator-latest-${{ matrix.runtime }}
          labels: |
            org.opencontainers.image.title=${{ github.repository }}
            org.opencontainers.image.description=Kubernetes operator for Casdoor
            org.opencontainers.image.url=https://github.com/ptrvsrg/casdoor-operator
            org.opencontainers.image.source=https://github.com/ptrvsrg/casdoor-operator
            org.opencontainers.image.version=${{ github.ref_name }}
            org.opencontainers.image.created=${{ github.run_started_at }}
            org.opencontainers.image.revision=${{ github.sha }}
          build-args: |
            ARTIFACT_VERSION=${{ github.ref_name }}
          push: true